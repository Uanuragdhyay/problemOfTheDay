//CODE 1

class Solution {
    public boolean doesValidArrayExist(int[] derived) {
        int xorSum = 0; // Initialize XOR sum
        for (int n : derived) {
            // if(n!=0 && n!=1)
            //return false;     //to check if the given array only contains 1 and 0 but it is not neccessary
            xorSum ^= n; // XOR each element
        }
        return xorSum == 0; // If XOR sum is 0, return true
    }
}

//CODE 2

class Solution {
    public boolean doesValidArrayExist(int[] derived) {
        int n=derived.length;
        int[] org=new int[n];

        //Populating the org array
        for(int i=1; i<n; i++){
            org[i]=derived[i-1]^org[i-1];
        }

        //Validating the rules for index i
        for(int i=0; i<n; i++){
            int idx=(i+1)%n;
            if(derived[i]!=(org[i]^org[idx])) return false;
        }

        return true;
    }
}
