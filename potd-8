class Solution {
    public List<String> wordSubsets(String[] words1, String[] words2) {
        int[] req = new int[26];
        for (String word : words2) {
            int[] cur = new int[26];
            for (char c : word.toCharArray()) {
                cur[c - 'a']++;
                req[c - 'a'] = Math.max(req[c - 'a'], cur[c - 'a']);
            }
        }
        
        List<String> ans = new ArrayList<>();
        for (String word : words1) {
            int[] cur = new int[26];
            for (char c : word.toCharArray()) cur[c - 'a']++;
            
            boolean isValid = true;
            for (int i = 0; i < 26; i++) {
                if (cur[i] < req[i]) {
                    isValid = false;
                    break;
                }
            }
            
            if (isValid) ans.add(word);
        }
        
        return ans;
    }
}



//code 2 

class Solution {
    public List<String> wordSubsets(String[] words1, String[] words2) {
        List<String> list=new ArrayList();
        int n=words1.length;
        int m=words2.length;

        int[] bMaxFreq=new int[26];           
      // Calculate maximum frequency for each character in words2      
        for(int i=0; i<m; i++){
            int[] bArr=new int[26];
            for(char ch:words2[i].toCharArray()){
                int idx=ch-'a';
                bArr[idx]++;
                bMaxFreq[idx] = (bMaxFreq[idx]<bArr[idx])?bArr[idx]:bMaxFreq[idx];
            }
        }

        // Check each word in words1
        for(int i=0; i<n; i++){
            int[] aArr=new int[26];       
            for(char ch:words1[i].toCharArray()){
                aArr[ch-'a']++;
            }

            if(checkSubset(bMaxFreq, aArr)){
                list.add(words1[i]);
            }
        }
        
        return list;
    }

    boolean checkSubset(int[] bArr, int[] aArr){
     
        for(int i=0; i<26; i++){
            if(bArr[i]>aArr[i]){
                return false;
            }
        }    
            
        return true;
    }
}

//Code 3

class Solution {
    public List<String> wordSubsets(String[] words1, String[] words2) {
        int arr[]=new int[26];
        List<String> res=new ArrayList<>();
        for(String word:words2){
            int temp[]=new int[26];
            for(int i=0;i<word.length();i++){
                temp[word.charAt(i)-'a']++;
            }
            for(int i=0;i<26;i++){
                arr[i]=Math.max(arr[i],temp[i]);
            }
        }

        for(String word:words1){
            int temp[]=new int[26];
            for(int i=0;i<word.length();i++){
                temp[word.charAt(i)-'a']++;
            }
            boolean flag=true;
            for(int i=0;i<26;i++){
                if(temp[i]<arr[i]){
                    flag=false;
                    break;
                }
            }
            if(flag){
                res.add(word);
            }
        }
        return res;
    }
}
